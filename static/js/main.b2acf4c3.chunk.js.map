{"version":3,"sources":["Person.js","PersonForm.js","PersonList.js","Home.js","index.js"],"names":["Person","firstName","lastName","email","age","currentRole","recommend","language","comments","this","languageData","title","active","roles","recommendData","Checkbox","props","label","type","name","checked","selected","onChange","value","Radio","InputComponent","className","id","htmlFor","placeholder","required","min","max","person","a","fetch","method","headers","body","JSON","stringify","catch","error","alert","undefined","promise","ok","status","PersonForm","state","recommendOption","slice","handleFirstNameChange","bind","handleLastNameChange","handleEmailChange","handleAgeChange","handleSubmit","handleRecommendChange","handleRoleChange","handleCommentsChange","handleLanguageChange","event","setState","target","languageUpdate","forEach","item","preventDefault","reduce","accumulator","currentValue","length","rest","onSubmit","map","React","Component","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2acf4c3.chunk.js","sourcesContent":["class Person {\r\n    constructor(firstName,\r\n                lastName,\r\n                email,\r\n                age,\r\n                currentRole,\r\n                recommend,\r\n                language,\r\n                comments) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.age = age;\r\n        this.currentRole = currentRole;\r\n        this.recommend = recommend;\r\n        this.language = language;\r\n        this.comments = comments;\r\n    }\r\n}\r\nexport default Person;","import React from 'react';\nimport Person from './Person';\nimport './PersonForm.css';\nimport {useHistory} from \"react-router-dom\";\n\nconst languageData = [\n    {title: 'Java', active: true},\n    {title: 'Java script', active: false},\n    {title: 'C++', active: false},\n];\n\nconst roles = ['Full time job', 'Student'];\n\nconst recommendData = [\n    {title: 'Yes'},\n    {title: 'No'},\n    {title: 'Maybe'},\n];\n\nfunction Checkbox(props) {\n    return (<div>\n        <label>{props.label}</label>\n        <input type=\"checkbox\" name=\"language\" checked={props.selected} onChange={props.onChange} value={props.label}/>\n    </div>);\n}\n\nfunction Radio(props) {\n    let result = (\n        <div>\n            <label>{props.label}</label>\n            <input type=\"radio\" name=\"language\" checked={props.selected} onChange={props.onChange} value={props.label}/>\n        </div>\n    );\n    return result;\n}\n\n\nfunction InputComponent(props) {\n    return (<div className=\"form-group\">\n        <label\n            id={props.id + \"-label\"}\n            htmlFor={props.id}>\n            {props.id}\n        </label>\n        <input id={props.id}\n               type={props.type}\n               placeholder={\"Enter your \" + props.id}\n               className=\"form-control\"\n               required\n               value={props.value}\n               onChange={props.onChange}\n               min={props.min}\n               max={props.max}\n        >\n        </input>\n    </div>);\n}\n\nfunction Languages(props) {\n    let result = \"\";\n    for (let l of props.language) {\n        result += <Checkbox selected={l.active} label={l.title}\n                            onChange={props.onChange}/>;\n    }\n    return result;\n}\n\nasync function rest(person) {\n    let promise = await fetch(\"http://localhost:8080/employee\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(person)\n    }).catch((error) => {\n        alert(\"Нет доступа к серверу\");\n    });\n    if (promise != undefined) {\n        if (promise.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа (см. про этот метод ниже)\n            alert(\"Сохранено в БД\");\n        } else {\n            alert(\"Ошибка HTTP: \" + promise.status);\n        }\n    }\n}\n\nclass PersonForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            age: \"\",\n            currentRole: roles[0],\n            recommendOption: recommendData[0].title,\n            language: languageData.slice(),\n            comments: \"\",\n        }\n\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleAgeChange = this.handleAgeChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleRecommendChange = this.handleRecommendChange.bind(this);\n        this.handleRoleChange = this.handleRoleChange.bind(this);\n        this.handleCommentsChange = this.handleCommentsChange.bind(this);\n        this.handleLanguageChange = this.handleLanguageChange.bind(this);\n    }\n\n    handleFirstNameChange(event) {\n        this.setState({firstName: event.target.value});\n    }\n\n    handleLastNameChange(event) {\n        this.setState({lastName: event.target.value});\n    }\n\n    handleEmailChange(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleAgeChange(event) {\n        this.setState({age: event.target.value});\n    }\n\n    handleRecommendChange(event) {\n        this.setState({recommendOption: event.target.value});\n    }\n\n    handleRoleChange(event) {\n        this.setState({currentRole: event.target.value});\n    }\n\n    handleCommentsChange(event) {\n        this.setState({comments: event.target.value});\n    }\n\n    handleLanguageChange(event) {\n        //проверяем checked и value\n        let languageUpdate = this.state.language.slice();\n        languageUpdate.forEach(item => {\n            if (item.title === event.target.value) {\n                item.active = !item.active;\n            }\n        })\n        this.setState({language: languageUpdate});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        //TODO здесь должна быть отправка рест запроса на сервер\n        let language = this.state.language.reduce(\n            (accumulator, currentValue) => {\n                return currentValue.active ? accumulator + (accumulator.length > 0 ? ',' : '') + currentValue.title : accumulator\n            },\n            \"\"\n        );\n        let person = new Person(this.state.firstName,\n            this.state.lastName,\n            this.state.email,\n            this.state.age,\n            this.state.currentRole,\n            this.state.recommendOption,\n            language,\n            this.state.comments);\n        // alert(JSON.stringify(person, null, 4));\n        rest(person);\n        // let history = useHistory();\n        // history.push(\"/personList\");\n        // window.location.assign('http://localhost:3000/personList/');\n        // this.props.history.push('/personList');\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 id=\"title\">\n                    Register\n                </h1>\n                <p id=\"description\">\n                    <em>Fill in the registration form below</em>\n                </p>\n                <form onSubmit={this.handleSubmit} id=\"survey-form\">\n                    <InputComponent value={this.state.firstName}\n                                    onChange={this.handleFirstNameChange}\n                                    id=\"First Name\"\n                                    type=\"text\"/>\n                    <InputComponent value={this.state.lastName}\n                                    onChange={this.handleLastNameChange}\n                                    id=\"Last Name\"\n                                    type=\"text\"/>\n                    <InputComponent value={this.state.email}\n                                    onChange={this.handleEmailChange}\n                                    id=\"E-mail\"\n                                    type=\"email\"/>\n                    <InputComponent value={this.state.age}\n                                    onChange={this.handleAgeChange}\n                                    id=\"Age(optional)\"\n                                    min=\"10\"\n                                    max=\"99\"\n                                    type=\"number\"/>\n                    <div className=\"form-group\">\n                        <label id=\"select-label\"\n                               htmlFor=\"dropdown\">Which option best describes your current role?</label>\n                        <select value={this.state.currentRole} onChange={this.handleRoleChange}>\n                            {roles.map(item => <option value={item}>{item}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>\n                            Would you recommend our site to your friend?\n                        </label>\n                        {recommendData.map(item => <Radio selected={item.title === this.state.recommendOption}\n                                                          label={item.title} onChange={this.handleRecommendChange}/>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <label>\n                            What language do you like to learn?\n                        </label>\n                        {/*<Languages languge={this.state.language} onChange={this.handleLanguageChange}/>*/}\n                        {/*<Checkbox selected={this.state.language.active} label={this.state.language.title}*/}\n                        {/*          onChange={this.handleLanguageChange}/>*/}\n                        {this.state.language.map(item => <Checkbox selected={item.active} label={item.title}\n                                                                   onChange={this.handleLanguageChange}/>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"comments\">\n                            Any comments or suggestions?\n                        </label>\n                        <textarea id=\"comments\"\n                                  name=\"comments\"\n                                  className=\"form-control\"\n                                  value={this.state.comments}\n                                  onChange={this.handleCommentsChange}>\n\t\t                </textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <button id=\"submit\"\n                                type=\"submit\"\n                                className=\"submit-button\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default PersonForm;\n","import React from 'react';\r\nimport './PersonForm.css';\r\n\r\nclass PersonList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOfPersons: []\r\n        };\r\n        this.rest = this.rest.bind(this);\r\n    }\r\n\r\n    async rest() {\r\n        let promise = await fetch(\"http://localhost:8080/employeeList\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            }\r\n        });\r\n        if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n            // получаем тело ответа (см. про этот метод ниже)\r\n            let json = await promise.json();\r\n            this.setState({\r\n                listOfPersons: json\r\n            });\r\n        } else {\r\n            alert(\"Ошибка HTTP: \" + promise.status);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log('Component will mount!');\r\n        this.rest();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Any text</p>\r\n                <div id=\"survey-form\">\r\n                    <h2>List of all persons</h2>\r\n                    <table border=\"2\" cellSpacing=\"5\" style={{backgroundColor: 'rgba(150,150,150,0.4)'}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>First Name</th>\r\n                            <th>Last name</th>\r\n                            <th>E-mail</th>\r\n                            <th>Age</th>\r\n                            <th>Current role</th>\r\n                            <th>Recommend</th>\r\n                            <th>Language</th>\r\n                            <th>Comments</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.listOfPersons.map((person) =>\r\n                            (<tr>\r\n                                <td>{person.firstName}</td>\r\n                                <td>{person.lastName}</td>\r\n                                <td>{person.email}</td>\r\n                                <td>{person.age}</td>\r\n                                <td>{person.currentRole}</td>\r\n                                <td>{person.recommend}</td>\r\n                                <td>{person.language}</td>\r\n                                <td>{person.comments}</td>\r\n                            </tr>)\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonList;\r\n","import React from 'react';\r\nimport PersonForm from \"./PersonForm\";\r\nimport PersonList from \"./PersonList\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <PersonForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from \"./Home\";\nimport './index.css'\nimport {\n    BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <Home/>\n    </Router>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}