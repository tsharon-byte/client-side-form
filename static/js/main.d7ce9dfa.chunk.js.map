{"version":3,"sources":["Person.js","PersonForm.js","DeletePersonForm.js","PersonList.js","About.js","Nav.js","Home.js","index.js"],"names":["Person","firstName","lastName","email","age","currentRole","recommend","language","comments","id","this","currentUserRole","languageData","title","active","roles","recommendData","Checkbox","props","label","type","name","checked","selected","onChange","value","Radio","InputComponent","className","htmlFor","placeholder","required","min","max","person","a","fetch","method","headers","body","JSON","stringify","catch","error","alert","undefined","promise","ok","status","PersonForm","state","recommendOption","slice","handleFirstNameChange","bind","handleLastNameChange","handleEmailChange","handleAgeChange","handleSubmit","handleRecommendChange","handleRoleChange","handleCommentsChange","handleLanguageChange","event","setState","target","languageUpdate","forEach","item","preventDefault","reduce","accumulator","currentValue","length","rest","onSubmit","map","ix","key","React","Component","DeletePersonForm","handleChange","p","PersonList","listOfPersons","json","console","log","style","marginLeft","border","cellSpacing","backgroundColor","About","Nav","color","to","Home","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7ce9dfa.chunk.js","sourcesContent":["class Person {\r\n    constructor(\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        age,\r\n        currentRole,\r\n        recommend,\r\n        language,\r\n        comments,\r\n        id=null) {\r\n        this.id = id;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.age = age;\r\n        this.currentUserRole = currentRole;\r\n        this.recommend = recommend;\r\n        this.language = language;\r\n        this.comments = comments;\r\n    }\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\nimport Person from './Person';\r\nimport './PersonForm.css';\r\n\r\nconst languageData = [\r\n    {title: 'Java', active: true},\r\n    {title: 'Java script', active: false},\r\n    {title: 'C++', active: false},\r\n];\r\n\r\nconst roles = ['Full time job', 'Student'];\r\n\r\nconst recommendData = [\r\n    {title: 'Yes'},\r\n    {title: 'No'},\r\n    {title: 'Maybe'},\r\n];\r\n\r\nfunction Checkbox(props) {\r\n    return (<div>\r\n        <label>{props.label}</label>\r\n        <input type=\"checkbox\" name=\"language\" checked={props.selected} onChange={props.onChange} value={props.label}/>\r\n    </div>);\r\n}\r\n\r\nfunction Radio(props) {\r\n    let result = (\r\n        <div>\r\n            <label>{props.label}</label>\r\n            <input type=\"radio\" name=\"language\" checked={props.selected} onChange={props.onChange} value={props.label}/>\r\n        </div>\r\n    );\r\n    return result;\r\n}\r\n\r\n\r\nfunction InputComponent(props) {\r\n    return (<div className=\"form-group\">\r\n        <label\r\n            id={props.id + \"-label\"}\r\n            htmlFor={props.id}>\r\n            {props.id}\r\n        </label>\r\n        <input id={props.id}\r\n               type={props.type}\r\n               placeholder={\"Enter your \" + props.id}\r\n               className=\"form-control\"\r\n               required\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               min={props.min}\r\n               max={props.max}\r\n        >\r\n        </input>\r\n    </div>);\r\n}\r\n\r\nasync function rest(person) {\r\n    // let url=`http://localhost:8080/employee`;\r\n    let url=\"https://salty-river-90503.herokuapp.com/employee\"\r\n    let promise = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(person)\r\n    }).catch((error) => {\r\n        alert(\"Нет доступа к серверу\");\r\n    });\r\n    if (promise !== undefined) {\r\n        if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n            // получаем тело ответа (см. про этот метод ниже)\r\n            alert(\"Сохранено в БД\");\r\n        } else {\r\n            alert(\"Ошибка HTTP: \" + promise.status);\r\n        }\r\n    }\r\n}\r\n\r\nclass PersonForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            age: \"\",\r\n            currentRole: roles[0],\r\n            recommendOption: recommendData[0].title,\r\n            language: languageData.slice(),\r\n            comments: \"\",\r\n        }\r\n\r\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\r\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handleAgeChange = this.handleAgeChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleRecommendChange = this.handleRecommendChange.bind(this);\r\n        this.handleRoleChange = this.handleRoleChange.bind(this);\r\n        this.handleCommentsChange = this.handleCommentsChange.bind(this);\r\n        this.handleLanguageChange = this.handleLanguageChange.bind(this);\r\n    }\r\n\r\n    handleFirstNameChange(event) {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    handleLastNameChange(event) {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    handleEmailChange(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    handleAgeChange(event) {\r\n        this.setState({age: event.target.value});\r\n    }\r\n\r\n    handleRecommendChange(event) {\r\n        this.setState({recommendOption: event.target.value});\r\n    }\r\n\r\n    handleRoleChange(event) {\r\n        this.setState({currentRole: event.target.value});\r\n    }\r\n\r\n    handleCommentsChange(event) {\r\n        this.setState({comments: event.target.value});\r\n    }\r\n\r\n    handleLanguageChange(event) {\r\n        //проверяем checked и value\r\n        let languageUpdate = this.state.language.slice();\r\n        languageUpdate.forEach(item => {\r\n            if (item.title === event.target.value) {\r\n                item.active = !item.active;\r\n            }\r\n        })\r\n        this.setState({language: languageUpdate});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        //TODO здесь должна быть отправка рест запроса на сервер\r\n        let language = this.state.language.reduce(\r\n            (accumulator, currentValue) => {\r\n                return currentValue.active ? accumulator + (accumulator.length > 0 ? ',' : '') + currentValue.title : accumulator\r\n            },\r\n            \"\"\r\n        );\r\n        let person = new Person(this.state.firstName,\r\n            this.state.lastName,\r\n            this.state.email,\r\n            this.state.age,\r\n            this.state.currentRole,\r\n            this.state.recommendOption,\r\n            language,\r\n            this.state.comments);\r\n        // alert(JSON.stringify(person, null, 4));\r\n        rest(person);\r\n        // let history = useHistory();\r\n        // history.push(\"/personList\");\r\n        // window.location.assign('http://localhost:3000/personList/');\r\n        // this.props.history.push('/personList');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 id=\"title\">\r\n                    Register\r\n                </h1>\r\n                <p id=\"description\">\r\n                    <em>Fill in the registration form below</em>\r\n                </p>\r\n                <form onSubmit={this.handleSubmit} id=\"survey-form\">\r\n                    <InputComponent value={this.state.firstName}\r\n                                    onChange={this.handleFirstNameChange}\r\n                                    id=\"First Name\"\r\n                                    type=\"text\"/>\r\n                    <InputComponent value={this.state.lastName}\r\n                                    onChange={this.handleLastNameChange}\r\n                                    id=\"Last Name\"\r\n                                    type=\"text\"/>\r\n                    <InputComponent value={this.state.email}\r\n                                    onChange={this.handleEmailChange}\r\n                                    id=\"E-mail\"\r\n                                    type=\"email\"/>\r\n                    <InputComponent value={this.state.age}\r\n                                    onChange={this.handleAgeChange}\r\n                                    id=\"Age(optional)\"\r\n                                    min=\"10\"\r\n                                    max=\"99\"\r\n                                    type=\"number\"/>\r\n                    <div className=\"form-group\">\r\n                        <label id=\"select-label\"\r\n                               htmlFor=\"dropdown\">Which option best describes your current role?</label>\r\n                        <select value={this.state.currentRole} onChange={this.handleRoleChange}>\r\n                            {roles.map((item, ix) => <option key={ix} value={item}>{item}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Would you recommend our site to your friend?\r\n                        </label>\r\n                        {recommendData.map((item, ix) => <Radio key={ix} selected={item.title === this.state.recommendOption}\r\n                                                          label={item.title} onChange={this.handleRecommendChange}/>)}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            What language do you like to learn?\r\n                        </label>\r\n                        {this.state.language.map((item, ix) => <Checkbox key={ix} selected={item.active} label={item.title}\r\n                                                                   onChange={this.handleLanguageChange}/>)}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"comments\">\r\n                            Any comments or suggestions?\r\n                        </label>\r\n                        <textarea id=\"comments\"\r\n                                  name=\"comments\"\r\n                                  className=\"form-control\"\r\n                                  value={this.state.comments}\r\n                                  onChange={this.handleCommentsChange}>\r\n\t\t                </textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button id=\"submit\"\r\n                                type=\"submit\"\r\n                                className=\"submit-button\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\nimport './PersonForm.css';\r\nimport Person from \"./Person\";\r\n\r\nfunction InputComponent(props) {\r\n    return (<div className=\"form-group\">\r\n        <label\r\n            id={props.id + \"-label\"}\r\n            htmlFor={props.id}>\r\n            {props.id}\r\n        </label>\r\n        <input id={props.id}\r\n               type={props.type}\r\n               placeholder={\"Enter your \" + props.id}\r\n               className=\"form-control\"\r\n               required\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               min={props.min}\r\n               max={props.max}\r\n        >\r\n        </input>\r\n    </div>);\r\n}\r\n\r\nasync function rest(person) {\r\n    // let url=`http://localhost:8080/employee`;\r\n    let url=`https://salty-river-90503.herokuapp.com/employee`;\r\n    let promise = await fetch(url, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(person)\r\n    }).catch((error) => {\r\n        alert(\"Нет доступа к серверу\");\r\n    });\r\n    if (promise !== undefined) {\r\n        if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n            // получаем тело ответа (см. про этот метод ниже)\r\n            alert(\"Удалено из БД\");\r\n        } else {\r\n            switch (promise.status) {\r\n                case 404:\r\n                    alert(`Нет такого пользователя в БД: ${person.firstName} ${person.lastName}`)\r\n                    break;\r\n                default:\r\n                    alert(\"Ошибка HTTP: \" + promise.status);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass DeletePersonForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        switch (event.target.id) {\r\n            case \"Person First Name\":\r\n                this.setState({firstName: event.target.value});\r\n                break;\r\n            case \"Person Last Name\":\r\n                this.setState({lastName: event.target.value});\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let p = new Person();\r\n        p.firstName = this.state.firstName;\r\n        p.lastName = this.state.lastName;\r\n        rest(p);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 id=\"title\">\r\n                    Delete person\r\n                </h1>\r\n                <form onSubmit={this.handleSubmit} id=\"survey-form\">\r\n                    {/*<InputComponent value={this.state.id}*/}\r\n                    {/*                onChange={this.handleChange}*/}\r\n                    {/*                id=\"Person Id\"*/}\r\n                    {/*                type=\"text\"/>*/}\r\n                    <InputComponent value={this.state.firstName}\r\n                                    onChange={this.handleChange}\r\n                                    id=\"Person First Name\"\r\n                                    type=\"text\"/>\r\n                    <InputComponent value={this.state.lastName}\r\n                                    onChange={this.handleChange}\r\n                                    id=\"Person Last Name\"\r\n                                    type=\"text\"/>\r\n                    <div className=\"form-group\">\r\n                        <button id=\"submit\"\r\n                                type=\"submit\"\r\n                                className=\"submit-button\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeletePersonForm;\r\n","import React from 'react';\r\nimport './PersonForm.css';\r\n\r\nclass PersonList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOfPersons: []\r\n        };\r\n        this.rest = this.rest.bind(this);\r\n    }\r\n\r\n    async rest() {\r\n        // let url=`http://localhost:8080/employeeList`;\r\n        let url=`https://salty-river-90503.herokuapp.com/employeeList`;\r\n        let promise = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            }\r\n        }).catch((error) => {\r\n            alert(\"Нет доступа к серверу\");\r\n        });\r\n        if (promise !== undefined) {\r\n            if (promise.ok) { // если HTTP-статус в диапазоне 200-299\r\n                // получаем тело ответа (см. про этот метод ниже)\r\n                let json = await promise.json();\r\n                this.setState({\r\n                    listOfPersons: json\r\n                });\r\n            } else {\r\n                alert(\"Ошибка HTTP: \" + promise.status);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Component did mount!');\r\n        this.rest();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>List of all persons</h2>\r\n                <div style={{marginLeft: \"20px\"}}>\r\n                    <table border=\"2\" cellSpacing=\"5\" style={{backgroundColor: 'rgba(150,150,150,0.4)'}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>First Name</th>\r\n                            <th>Last name</th>\r\n                            <th>E-mail</th>\r\n                            <th>Age</th>\r\n                            <th>Current role</th>\r\n                            <th>Recommend</th>\r\n                            <th>Language</th>\r\n                            <th>Comments</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.listOfPersons.map((person,id) =>\r\n                            (<tr key={id}>\r\n                                <td>{person.firstName}</td>\r\n                                <td>{person.lastName}</td>\r\n                                <td>{person.email}</td>\r\n                                <td>{person.age}</td>\r\n                                <td>{person.currentUserRole}</td>\r\n                                <td>{person.recommend}</td>\r\n                                <td>{person.language}</td>\r\n                                <td>{person.comments}</td>\r\n                            </tr>)\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonList;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1 id=\"title\">\r\n                This is a test application to check interactions with server\r\n            </h1>\r\n            <div>Press <u>Add person</u> to add a person into DB.\r\n            </div>\r\n            <div>\r\n            Press <u>List of persons</u> to get all persons from DB.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './App.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    const style={\r\n        color:\"white\"\r\n    };\r\n    return (\r\n        <nav>\r\n            <h1>Logo</h1>\r\n            <ul className=\"nav-links\">\r\n                <Link to='/form' style={style}>\r\n                    <li>Add person</li>\r\n                </Link>\r\n                <Link to='/list' style={style}>\r\n                    <li>List of persons</li>\r\n                </Link>\r\n                <Link to='/delete' style={style}>\r\n                    <li>Delete the person</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport PersonForm from \"./PersonForm\";\r\nimport DeletePersonForm from \"./DeletePersonForm\";\r\nimport PersonList from \"./PersonList\";\r\nimport About from \"./About\";\r\nimport Nav from \"./Nav\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    return (\r\n        <Router>\r\n                <Nav/>\r\n                <Switch>\r\n                    <Route exact path='/client-side-form' component={About}/>\r\n                    <Route path=\"/form\" component={PersonForm}/>\r\n                    <Route path=\"/list\" component={PersonList}/>\r\n                    <Route path=\"/delete\" component={DeletePersonForm}/>\r\n                </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from \"./Home\";\r\nimport './index.css'\r\nimport {\r\n    BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Home/>\r\n    </Router>,\r\n    document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}